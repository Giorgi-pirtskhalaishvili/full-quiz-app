{"ast":null,"code":"var _jsxFileName = \"/Users/nino/Desktop/app/quiz_API/quiz_project/frontend/src/pages/StartQuiz.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport styles from \"../styles/playquiz.module.css\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayQuizTemplate = () => {\n  _s();\n  const quizId = useParams();\n  const quizName = quizId.uuid;\n  const [questionsData, setQuestionsData] = useState([]);\n  useEffect(() => {\n    const handleData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/quiz/start/${quizName}`, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          withCredentials: true\n        });\n        const quizData = response.data;\n        console.log(quizData);\n        setQuestionsData(quizData);\n      } catch (error) {\n        console.error(\"Error fetching quiz:\", error.message);\n      }\n    };\n    handleData();\n  }, []);\n\n  // Display Questions\n  let [index, setIndex] = useState(0);\n  const [question, setQuestion] = useState({\n    answer: []\n  }); // Initial state with an empty answer array\n  const [lock, setLock] = useState(false);\n  // Display Users Score\n  const [result, setResult] = useState(false);\n  const [score, setScore] = useState(0);\n  // Show Correct Answer in case of Incorrect\n  const option1 = useRef(null);\n  const option2 = useRef(null);\n  const option3 = useRef(null);\n  const option4 = useRef(null);\n  const optionArray = [option1, option2, option3, option4];\n  // Move to the next question\n  const moveToNext = () => {\n    if (lock) {\n      if (index === questionsData.length - 1) {\n        setResult(true);\n        return 0;\n      }\n      setIndex(++index);\n      setQuestion(questionsData[index]);\n      setLock(false);\n      optionArray.forEach(option => {\n        option.current.classList.remove(\"correct\");\n        option.current.classList.remove(\"inCorrect\");\n      });\n    }\n  };\n  const checkAnswer = (e, answer) => {\n    if (!lock) {\n      question.answer.forEach(eachQuestion => {\n        if (eachQuestion.is_correct && answer) {\n          console.log(\"TRUEEEEE\");\n          e.target.classList.add(\"correct\");\n          setScore(prev => prev + 1);\n          return;\n        } else {\n          e.target.classList.add(\"inCorrect\");\n          optionArray[question.answer.findIndex(a => a.is_correct)].current.classList.add(\"correct\");\n        }\n      });\n      setLock(true);\n    }\n  };\n  if (result) {\n    console.log(result);\n    // Return your result component here\n    // return (\n    //   <DisplayScore\n    //     maxScore={questionsData.length}\n    //     score={score}\n    //     dashArray={(score / questionsData.length) * 1125}\n    //   />\n    // );\n  }\n  if (questionsData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this); // or some loading indicator\n  }\n\n  // Continue with your component rendering\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playQuizTemplateContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.playQuizTemplateHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.numberOfQuestion,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [index + 1, \"/\", questionsData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questionContainer,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.answersContainer,\n      children: question.answer.map((ans, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        ref: optionArray[i],\n        onClick: e => checkAnswer(e, ans.is_correct),\n        className: styles[`option${i + 1}`],\n        children: ans.answer_text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.button,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: moveToNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayQuizTemplate, \"XNLl6tlXnVBoZRChXKnrKQUEfrM=\", false, function () {\n  return [useParams];\n});\n_c = PlayQuizTemplate;\nexport default PlayQuizTemplate;\nvar _c;\n$RefreshReg$(_c, \"PlayQuizTemplate\");","map":{"version":3,"names":["axios","styles","useRef","useState","useEffect","useParams","jsxDEV","_jsxDEV","PlayQuizTemplate","_s","quizId","quizName","uuid","questionsData","setQuestionsData","handleData","response","get","headers","withCredentials","quizData","data","console","log","error","message","index","setIndex","question","setQuestion","answer","lock","setLock","result","setResult","score","setScore","option1","option2","option3","option4","optionArray","moveToNext","length","forEach","option","current","classList","remove","checkAnswer","e","eachQuestion","is_correct","target","add","prev","findIndex","a","children","fileName","_jsxFileName","lineNumber","columnNumber","className","playQuizTemplateContainer","playQuizTemplateHeader","numberOfQuestion","questionContainer","title","answersContainer","map","ans","i","ref","onClick","answer_text","button","_c","$RefreshReg$"],"sources":["/Users/nino/Desktop/app/quiz_API/quiz_project/frontend/src/pages/StartQuiz.jsx"],"sourcesContent":["import axios from \"axios\";\nimport styles from \"../styles/playquiz.module.css\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst PlayQuizTemplate = () => {\n  const quizId = useParams();\n  const quizName = quizId.uuid;\n\n  const [questionsData, setQuestionsData] = useState([]);\n\n  useEffect(() => {\n    const handleData = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:8000/api/quiz/start/${quizName}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n          }\n        );\n\n        const quizData = response.data;\n        console.log(quizData);\n        setQuestionsData(quizData);\n      } catch (error) {\n        console.error(\"Error fetching quiz:\", error.message);\n      }\n    };\n\n    handleData();\n  }, []);\n\n  // Display Questions\n  let [index, setIndex] = useState(0);\n  const [question, setQuestion] = useState({ answer: [] }); // Initial state with an empty answer array\n  const [lock, setLock] = useState(false);\n  // Display Users Score\n  const [result, setResult] = useState(false);\n  const [score, setScore] = useState(0);\n  // Show Correct Answer in case of Incorrect\n  const option1 = useRef(null);\n  const option2 = useRef(null);\n  const option3 = useRef(null);\n  const option4 = useRef(null);\n  const optionArray = [option1, option2, option3, option4];\n  // Move to the next question\n  const moveToNext = () => {\n    if (lock) {\n      if (index === questionsData.length - 1) {\n        setResult(true);\n        return 0;\n      }\n      setIndex(++index);\n      setQuestion(questionsData[index]);\n      setLock(false);\n      optionArray.forEach((option) => {\n        option.current.classList.remove(\"correct\");\n        option.current.classList.remove(\"inCorrect\");\n      });\n    }\n  };\n\n  const checkAnswer = (e, answer) => {\n    if (!lock) {\n      question.answer.forEach((eachQuestion) => {\n        if (eachQuestion.is_correct && answer) {\n          console.log(\"TRUEEEEE\");\n          e.target.classList.add(\"correct\");\n          setScore((prev) => prev + 1);\n          return;\n        } else {\n          e.target.classList.add(\"inCorrect\");\n          optionArray[\n            question.answer.findIndex((a) => a.is_correct)\n          ].current.classList.add(\"correct\");\n        }\n      });\n      setLock(true);\n    }\n  };\n\n  if (result) {\n    console.log(result);\n    // Return your result component here\n    // return (\n    //   <DisplayScore\n    //     maxScore={questionsData.length}\n    //     score={score}\n    //     dashArray={(score / questionsData.length) * 1125}\n    //   />\n    // );\n  }\n\n  if (questionsData.length === 0) {\n    return <div>Loading...</div>; // or some loading indicator\n  }\n\n  // Continue with your component rendering\n  return (\n    <div className={styles.playQuizTemplateContainer}>\n      <div className={styles.playQuizTemplateHeader}>\n        <p>quiz</p>\n        <p>\n          {/* <img src={} alt=\"\" /> */}\n          username\n        </p>\n      </div>\n      <div className={styles.numberOfQuestion}>\n        <p>\n          {index + 1}/{questionsData.length}\n        </p>\n      </div>\n      <div className={styles.questionContainer}>\n        <p>{question.title}</p>\n      </div>\n      <div className={styles.answersContainer}>\n        {question.answer.map((ans, i) => (\n          <p\n            key={i}\n            ref={optionArray[i]}\n            onClick={(e) => checkAnswer(e, ans.is_correct)}\n            className={styles[`option${i + 1}`]}\n          >\n            {ans.answer_text}\n          </p>\n        ))}\n      </div>\n      <div className={styles.button}>\n        <button onClick={moveToNext}>Next</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayQuizTemplate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}