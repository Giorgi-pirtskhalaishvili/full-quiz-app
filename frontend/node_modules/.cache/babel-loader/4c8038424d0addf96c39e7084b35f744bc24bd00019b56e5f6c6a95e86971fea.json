{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport styles from \"../styles/startquiz.module.css\";\n// import userIcon from “../../images/userIcon.png”;\nimport { useRef, useState, useEffect } from \"react\";\n// import questionsData from “../../Questions-Answers/data”;\n// import DisplayScore from “../DisplayScore/DisplayScore”;\n// import MultiSelect from “../MultiSelectModal/MultiSelectModal”;\n\n// console.log(questionsData);\nconst PlayQuizTemplate = () => {\n  _s();\n  useEffect(() => {\n    const handleData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/quiz/start/${quizName}`, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          withCredentials: true\n        });\n        const quizData = response.data;\n        console.log(quizData);\n        // setQuiz(quizData);\n      } catch (error) {\n        console.error(\"Error fetching quiz:\", error.message);\n      }\n    };\n    handleData();\n  }, []);\n\n  //   // Display Questions\n  //   let [index, setIndex] = useState(0);\n  //   const [question, setQuestion] = useState(questionsData[0]);\n  //   const [lock, setLock] = useState(false);\n  //   // Display Users Score\n  //   const [result, setResult] = useState(false);\n  //   const [score, setScore] = useState(0);\n  //   // Show Correct Answwer in case of Incorrect\n  //   const option1 = useRef(null);\n  //   const option2 = useRef(null);\n  //   const option3 = useRef(null);\n  //   const option4 = useRef(null);\n  //   const optionArray = [option1, option2, option3, option4];\n  //   // Move to next question\n  //   const moveToNext = () => {\n  //     if (lock) {\n  //       if (index === questionsData.length - 1) {\n  //         setResult(true);\n  //         return 0;\n  //       }\n  //       setIndex(++index);\n  //       setQuestion(questionsData[index]);\n  //       setLock(false);\n  //       optionArray.map((option) => {\n  //         option.current.classList.remove(\"correct\");\n  //         option.current.classList.remove(\"inCorrect\");\n  //       });\n  //     }\n  //   };\n  //   const checkAnswer = (e, answer) => {\n  //     if (!lock) {\n  //       question.answer.map((eachQuestion) => {\n  //         if (eachQuestion.is_correct && answer) {\n  //           console.log(\"TRUEEEEE\");\n  //           e.target.classList.add(\"correct\");\n  //           setScore((prev) => prev + 1);\n  //           return;\n  //         } else {\n  //           e.target.classList.add(\"inCorrect\");\n  //           optionArray[\n  //             question.answer.findIndex((a) => a.is_correct)\n  //           ].current.classList.add(\"correct\");\n  //         }\n  //       });\n  //       setLock(true);\n  //     }\n  //   };\n  //   if (result)\n  //     return (\n  //       <DisplayScore\n  //         maxScore={questionsData.length}\n  //         score={score}\n  //         dashArray={(score / questionsData.length) * 1125}\n  //       />\n  //     );\n  //   return (\n  //     <div className={styles.playQuizTemplateContainer}>\n  //       <div className={styles.playQuizTemplateHeader}>\n  //         <p>{“QUIZii”}</p>\n  //         <p>\n  //           <img src={userIcon} alt=\"\" />\n  //           {“User Name”}\n  //         </p>\n  //       </div>\n  //       {}\n  //       <div className={styles.numberOfQuestion}>\n  //         <p>\n  //           {index + 1}/{questionsData.length}\n  //         </p>\n  //       </div>\n  //       <div className={styles.questionContainer}>\n  //         <p>{question.title}</p>\n  //       </div>\n  //       <div className={styles.answersContainer}>\n  //         <p\n  //           ref={option1}\n  //           onClick={(e) => checkAnswer(e, question.answer[0].is_correct)}\n  //           className={styles.first}\n  //         >\n  //           {question.answer[0].answer_text}\n  //         </p>\n  //         <p\n  //           ref={option2}\n  //           onClick={(e) => checkAnswer(e, question.answer[1].is_correct)}\n  //           className={styles.second}\n  //         >\n  //           {question.answer[1].answer_text}\n  //         </p>\n  //         <p\n  //           ref={option3}\n  //           onClick={(e) => checkAnswer(e, question.answer[2].is_correct)}\n  //           className={styles.third}\n  //         >\n  //           {question.answer[2].answer_text}\n  //         </p>\n  //         <p\n  //           ref={option4}\n  //           onClick={(e) => checkAnswer(e, question.answer[3].is_correct)}\n  //           className={styles.fourth}\n  //         >\n  //           {question.answer[3].answer_text}\n  //         </p>\n  //       </div>\n  //       <div className={styles.button}>\n  //         <button onClick={() => moveToNext()}>Next</button>\n  //       </div>\n  //     </div>\n  //   );\n};\n_s(PlayQuizTemplate, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PlayQuizTemplate;\nexport default PlayQuizTemplate;\nvar _c;\n$RefreshReg$(_c, \"PlayQuizTemplate\");","map":{"version":3,"names":["axios","styles","useRef","useState","useEffect","PlayQuizTemplate","_s","handleData","response","get","quizName","headers","withCredentials","quizData","data","console","log","error","message","_c","$RefreshReg$"],"sources":["/Users/nino/Desktop/app/quiz_API/quiz_project/frontend/src/pages/StartQuiz.jsx"],"sourcesContent":["import axios from \"axios\";\nimport styles from \"../styles/startquiz.module.css\";\n// import userIcon from “../../images/userIcon.png”;\nimport { useRef, useState, useEffect } from \"react\";\n// import questionsData from “../../Questions-Answers/data”;\n// import DisplayScore from “../DisplayScore/DisplayScore”;\n// import MultiSelect from “../MultiSelectModal/MultiSelectModal”;\n\n// console.log(questionsData);\nconst PlayQuizTemplate = () => {\n  useEffect(() => {\n    const handleData = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:8000/api/quiz/start/${quizName}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n          }\n        );\n\n        const quizData = response.data;\n        console.log(quizData);\n        // setQuiz(quizData);\n      } catch (error) {\n        console.error(\"Error fetching quiz:\", error.message);\n      }\n    };\n\n    handleData();\n  }, []);\n\n  //   // Display Questions\n  //   let [index, setIndex] = useState(0);\n  //   const [question, setQuestion] = useState(questionsData[0]);\n  //   const [lock, setLock] = useState(false);\n  //   // Display Users Score\n  //   const [result, setResult] = useState(false);\n  //   const [score, setScore] = useState(0);\n  //   // Show Correct Answwer in case of Incorrect\n  //   const option1 = useRef(null);\n  //   const option2 = useRef(null);\n  //   const option3 = useRef(null);\n  //   const option4 = useRef(null);\n  //   const optionArray = [option1, option2, option3, option4];\n  //   // Move to next question\n  //   const moveToNext = () => {\n  //     if (lock) {\n  //       if (index === questionsData.length - 1) {\n  //         setResult(true);\n  //         return 0;\n  //       }\n  //       setIndex(++index);\n  //       setQuestion(questionsData[index]);\n  //       setLock(false);\n  //       optionArray.map((option) => {\n  //         option.current.classList.remove(\"correct\");\n  //         option.current.classList.remove(\"inCorrect\");\n  //       });\n  //     }\n  //   };\n  //   const checkAnswer = (e, answer) => {\n  //     if (!lock) {\n  //       question.answer.map((eachQuestion) => {\n  //         if (eachQuestion.is_correct && answer) {\n  //           console.log(\"TRUEEEEE\");\n  //           e.target.classList.add(\"correct\");\n  //           setScore((prev) => prev + 1);\n  //           return;\n  //         } else {\n  //           e.target.classList.add(\"inCorrect\");\n  //           optionArray[\n  //             question.answer.findIndex((a) => a.is_correct)\n  //           ].current.classList.add(\"correct\");\n  //         }\n  //       });\n  //       setLock(true);\n  //     }\n  //   };\n  //   if (result)\n  //     return (\n  //       <DisplayScore\n  //         maxScore={questionsData.length}\n  //         score={score}\n  //         dashArray={(score / questionsData.length) * 1125}\n  //       />\n  //     );\n  //   return (\n  //     <div className={styles.playQuizTemplateContainer}>\n  //       <div className={styles.playQuizTemplateHeader}>\n  //         <p>{“QUIZii”}</p>\n  //         <p>\n  //           <img src={userIcon} alt=\"\" />\n  //           {“User Name”}\n  //         </p>\n  //       </div>\n  //       {}\n  //       <div className={styles.numberOfQuestion}>\n  //         <p>\n  //           {index + 1}/{questionsData.length}\n  //         </p>\n  //       </div>\n  //       <div className={styles.questionContainer}>\n  //         <p>{question.title}</p>\n  //       </div>\n  //       <div className={styles.answersContainer}>\n  //         <p\n  //           ref={option1}\n  //           onClick={(e) => checkAnswer(e, question.answer[0].is_correct)}\n  //           className={styles.first}\n  //         >\n  //           {question.answer[0].answer_text}\n  //         </p>\n  //         <p\n  //           ref={option2}\n  //           onClick={(e) => checkAnswer(e, question.answer[1].is_correct)}\n  //           className={styles.second}\n  //         >\n  //           {question.answer[1].answer_text}\n  //         </p>\n  //         <p\n  //           ref={option3}\n  //           onClick={(e) => checkAnswer(e, question.answer[2].is_correct)}\n  //           className={styles.third}\n  //         >\n  //           {question.answer[2].answer_text}\n  //         </p>\n  //         <p\n  //           ref={option4}\n  //           onClick={(e) => checkAnswer(e, question.answer[3].is_correct)}\n  //           className={styles.fourth}\n  //         >\n  //           {question.answer[3].answer_text}\n  //         </p>\n  //       </div>\n  //       <div className={styles.button}>\n  //         <button onClick={() => moveToNext()}>Next</button>\n  //       </div>\n  //     </div>\n  //   );\n};\nexport default PlayQuizTemplate;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,gCAAgC;AACnD;AACA,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD;AACA;AACA;;AAEA;AACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7BF,SAAS,CAAC,MAAM;IACd,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC7B,wCAAuCC,QAAS,EAAC,EAClD;UACEC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,eAAe,EAAE;QACnB,CACF,CAAC;QAED,MAAMC,QAAQ,GAAGL,QAAQ,CAACM,IAAI;QAC9BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACrB;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACtD;IACF,CAAC;IAEDX,UAAU,CAAC,CAAC;EACdrIID,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAsItB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}