{"ast":null,"code":"var _jsxFileName = \"/Users/nino/Desktop/app/quiz_API/quiz_project/frontend/src/pages/EditQuizNew.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"../styles/editquiznew.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuizNew = () => {\n  _s();\n  const quizId = useParams();\n  const quizName = quizId.uuid;\n  const [quiz, setQuiz] = useState(\"\");\n  const [selectedQuestionIndex, setSelectedQuestionIndex] = useState(null);\n  //   const [updatedQuestion, setUpdatedQuestion] = {\n  //     quiz: 0,\n  //     technique: 1,\n  //     title: \"string\",\n  //     answer: [\n  //       {\n  //         id: 0,\n  //         answer_text: \"string\",\n  //         is_correct: true,\n  //       },\n  //     ],\n  //   };\n\n  //   const editQuiz = async () => {\n  //     const request = await axios.post(\n  //       \"http://localhost:8000/api/quiz/new_question_create\",\n  //       {\n  //         technique: 1,\n  //         title: quiz[0].title,\n  //         answer: [\n  //           {\n  //             answer_text: \"გააჩნია კურსს\",\n  //             is_correct: false,\n  //             // id: 193,\n  //           },\n  //           {\n  //             answer_text: \"3 თვე\",\n  //             is_correct: false,\n  //             // id: 194,\n  //           },\n  //           {\n  //             answer_text: \"5 თვე\",\n  //             is_correct: false,\n  //             // id: 195,\n  //           },\n  //           {\n  //             answer_text: \"შეცვლილი პასუხი\",\n  //             is_correct: false,\n  //             // id: 196,\n  //           },\n  //         ],\n  //       },\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //       }\n  //     );\n\n  //     console.log(\"Quiz created successfully:\", request.data);\n  //   };\n\n  useEffect(() => {\n    const handleData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/quiz/start/${quizName}`, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          withCredentials: true\n        });\n        const quizData = response.data;\n        console.log(quizData);\n        setQuiz(quizData);\n      } catch (error) {\n        console.error(\"Error fetching quiz:\", error.message);\n      }\n    };\n    handleData();\n  }, []);\n  const handleEditButtonClick = index => {\n    setSelectedQuestionIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Quiz Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), quiz && quiz.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.question,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questiondetail,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.questionindex,\n          onClick: () => handleEditButtonClick(index),\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), selectedQuestionIndex === index ? question.answer.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.questioninput,\n        type: \"text\",\n        value: answer.answer_text\n        //   onChange={(e) => setUpdatedQuestion()}\n      }, answerIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please choose question to edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.changebutton,\n        onClick: editQuiz,\n        children: \"Edit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(EditQuizNew, \"arYRkYM1yHmtcaNYuHobXMgSezk=\", false, function () {\n  return [useParams];\n});\n_c = EditQuizNew;\nexport default EditQuizNew;\nvar _c;\n$RefreshReg$(_c, \"EditQuizNew\");","map":{"version":3,"names":["axios","React","useEffect","useState","useParams","styles","jsxDEV","_jsxDEV","EditQuizNew","_s","quizId","quizName","uuid","quiz","setQuiz","selectedQuestionIndex","setSelectedQuestionIndex","handleData","response","get","headers","withCredentials","quizData","data","console","log","error","message","handleEditButtonClick","index","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","className","questiondetail","questionindex","onClick","title","answer","answerIndex","questioninput","type","value","answer_text","changebutton","editQuiz","_c","$RefreshReg$"],"sources":["/Users/nino/Desktop/app/quiz_API/quiz_project/frontend/src/pages/EditQuizNew.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"../styles/editquiznew.module.css\";\n\nconst EditQuizNew = () => {\n  const quizId = useParams();\n  const quizName = quizId.uuid;\n  const [quiz, setQuiz] = useState(\"\");\n  const [selectedQuestionIndex, setSelectedQuestionIndex] = useState(null);\n  //   const [updatedQuestion, setUpdatedQuestion] = {\n  //     quiz: 0,\n  //     technique: 1,\n  //     title: \"string\",\n  //     answer: [\n  //       {\n  //         id: 0,\n  //         answer_text: \"string\",\n  //         is_correct: true,\n  //       },\n  //     ],\n  //   };\n\n//   const editQuiz = async () => {\n//     const request = await axios.post(\n//       \"http://localhost:8000/api/quiz/new_question_create\",\n//       {\n//         technique: 1,\n//         title: quiz[0].title,\n//         answer: [\n//           {\n//             answer_text: \"გააჩნია კურსს\",\n//             is_correct: false,\n//             // id: 193,\n//           },\n//           {\n//             answer_text: \"3 თვე\",\n//             is_correct: false,\n//             // id: 194,\n//           },\n//           {\n//             answer_text: \"5 თვე\",\n//             is_correct: false,\n//             // id: 195,\n//           },\n//           {\n//             answer_text: \"შეცვლილი პასუხი\",\n//             is_correct: false,\n//             // id: 196,\n//           },\n//         ],\n//       },\n//       {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       }\n//     );\n\n//     console.log(\"Quiz created successfully:\", request.data);\n//   };\n\n  useEffect(() => {\n    const handleData = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:8000/api/quiz/start/${quizName}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n          }\n        );\n\n        const quizData = response.data;\n        console.log(quizData);\n        setQuiz(quizData);\n      } catch (error) {\n        console.error(\"Error fetching quiz:\", error.message);\n      }\n    };\n\n    handleData();\n  }, []);\n\n  const handleEditButtonClick = (index) => {\n    setSelectedQuestionIndex(index);\n  };\n\n  return (\n    <div>\n      <h1>Edit Quiz Answers</h1>\n      {quiz &&\n        quiz.map((question, index) => (\n          <div key={index} className={styles.question}>\n            <div className={styles.questiondetail}>\n              {\" \"}\n              <button\n                className={styles.questionindex}\n                onClick={() => handleEditButtonClick(index)}\n              >\n                {index + 1}\n              </button>\n              <p>{question.title}</p>\n            </div>\n\n            {selectedQuestionIndex === index ? (\n              question.answer.map((answer, answerIndex) => (\n                <input\n                  className={styles.questioninput}\n                  key={answerIndex}\n                  type=\"text\"\n                  value={answer.answer_text}\n                  //   onChange={(e) => setUpdatedQuestion()}\n                />\n              ))\n            ) : (\n              <p>Please choose question to edit</p>\n            )}\n            <button className={styles.changebutton} onClick={editQuiz}>\n              Edit Question\n            </button>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default EditQuizNew;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}