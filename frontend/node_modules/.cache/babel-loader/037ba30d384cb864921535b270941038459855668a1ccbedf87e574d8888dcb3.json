{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst apiUrl = \"http://localhost:8000/api/user/login/\";\nexport const loginUser = createAsyncThunk(\"user/loginUser\", async data => {\n  try {\n    const response = await axios.post(`${apiUrl}`, data, {\n      withCredentials: true\n    });\n    console.log(response);\n    if (response) {\n      return response;\n    }\n  } catch (error) {\n    throw new Error(\"Login failed\");\n  }\n});\nconst initialState = {\n  loading: false,\n  user: null,\n  error: null,\n  sessionId: null\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.user = null;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.data;\n      state.error = null;\n    }).addCase(loginUser.rejected, state => {\n      state.loading = false;\n      state.user = null;\n      state.error = \"Username or password is incorrect\";\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","apiUrl","loginUser","data","response","post","withCredentials","console","log","error","Error","initialState","loading","user","sessionId","userSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/nino/Desktop/app/quiz_API/quiz_project/frontend/src/store/login/UserSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst apiUrl = \"http://localhost:8000/api/user/login/\";\n\nexport const loginUser = createAsyncThunk(\"user/loginUser\", async (data) => {\n  try {\n    const response = await axios.post(`${apiUrl}`, data, {\n      withCredentials: true,\n    });\n    console.log(response);\n    if (response) {\n      return response;\n    }\n  } catch (error) {\n    throw new Error(\"Login failed\");\n  }\n});\n\nconst initialState = {\n  loading: false,\n  user: null,\n  error: null,\n  sessionId: null,\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.user = null;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.data;\n        state.error = null;\n      })\n      .addCase(loginUser.rejected, (state) => {\n        state.loading = false;\n        state.user = null;\n        state.error = \"Username or password is incorrect\";\n      });\n  },\n});\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,uCAAuC;AAEtD,OAAO,MAAMC,SAAS,GAAGJ,gBAAgB,CAAC,gBAAgB,EAAE,MAAOK,IAAI,IAAK;EAC1E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,MAAO,EAAC,EAAEE,IAAI,EAAE;MACnDG,eAAe,EAAE;IACnB,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,IAAIA,QAAQ,EAAE;MACZ,OAAOA,QAAQ;IACjB;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACjC;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,IAAI;EACVJ,KAAK,EAAE,IAAI;EACXK,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC5BiB,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,SAAS,CAACkB,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAACT,OAAO,GAAG,IAAI;MACpBS,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDU,OAAO,CAACjB,SAAS,CAACoB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACT,OAAO,GAAG,KAAK;MACrBS,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO,CAACrB,IAAI;MAChCkB,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDU,OAAO,CAACjB,SAAS,CAACuB,QAAQ,EAAGJ,KAAK,IAAK;MACtCA,KAAK,CAACT,OAAO,GAAG,KAAK;MACrBS,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACZ,KAAK,GAAG,mCAAmC;IACnD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeM,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}